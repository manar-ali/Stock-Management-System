//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Stock_Management_System.DB
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class product_DBEntities1 : DbContext
    {
        public product_DBEntities1()
            : base("name=product_DBEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CATEGORy> CATEGORIES { get; set; }
        public virtual DbSet<CUSTOMER> CUSTOMERS { get; set; }
        public virtual DbSet<ORDER> ORDERS { get; set; }
        public virtual DbSet<PRODUCT> PRODUCTS { get; set; }
        public virtual DbSet<TBL_USERS> TBL_USERS { get; set; }
    
        public virtual int ADD_PRODUCT(string iD_PRODUCT, string lABEL_PRODUCT, Nullable<int> qTE_IN_STOCK, string pRICE, byte[] iMAGE, Nullable<int> iD_CAT)
        {
            var iD_PRODUCTParameter = iD_PRODUCT != null ?
                new ObjectParameter("ID_PRODUCT", iD_PRODUCT) :
                new ObjectParameter("ID_PRODUCT", typeof(string));
    
            var lABEL_PRODUCTParameter = lABEL_PRODUCT != null ?
                new ObjectParameter("LABEL_PRODUCT", lABEL_PRODUCT) :
                new ObjectParameter("LABEL_PRODUCT", typeof(string));
    
            var qTE_IN_STOCKParameter = qTE_IN_STOCK.HasValue ?
                new ObjectParameter("QTE_IN_STOCK", qTE_IN_STOCK) :
                new ObjectParameter("QTE_IN_STOCK", typeof(int));
    
            var pRICEParameter = pRICE != null ?
                new ObjectParameter("PRICE", pRICE) :
                new ObjectParameter("PRICE", typeof(string));
    
            var iMAGEParameter = iMAGE != null ?
                new ObjectParameter("IMAGE", iMAGE) :
                new ObjectParameter("IMAGE", typeof(byte[]));
    
            var iD_CATParameter = iD_CAT.HasValue ?
                new ObjectParameter("ID_CAT", iD_CAT) :
                new ObjectParameter("ID_CAT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADD_PRODUCT", iD_PRODUCTParameter, lABEL_PRODUCTParameter, qTE_IN_STOCKParameter, pRICEParameter, iMAGEParameter, iD_CATParameter);
        }
    
        public virtual int DELETE_PRODUCT(string iD_PRODUCT)
        {
            var iD_PRODUCTParameter = iD_PRODUCT != null ?
                new ObjectParameter("ID_PRODUCT", iD_PRODUCT) :
                new ObjectParameter("ID_PRODUCT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_PRODUCT", iD_PRODUCTParameter);
        }
    
        public virtual ObjectResult<Get_All_Categories_Result> Get_All_Categories()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_All_Categories_Result>("Get_All_Categories");
        }
    
        public virtual ObjectResult<GET_PRODUCT_DETAILS_Result> GET_PRODUCT_DETAILS(string iD_PRODUCT)
        {
            var iD_PRODUCTParameter = iD_PRODUCT != null ?
                new ObjectParameter("ID_PRODUCT", iD_PRODUCT) :
                new ObjectParameter("ID_PRODUCT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_PRODUCT_DETAILS_Result>("GET_PRODUCT_DETAILS", iD_PRODUCTParameter);
        }
    
        public virtual ObjectResult<GET_PRODUCTS_Result> GET_PRODUCTS(Nullable<int> iD_CAT)
        {
            var iD_CATParameter = iD_CAT.HasValue ?
                new ObjectParameter("ID_CAT", iD_CAT) :
                new ObjectParameter("ID_CAT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_PRODUCTS_Result>("GET_PRODUCTS", iD_CATParameter);
        }
    
        public virtual ObjectResult<SP_LOGIN_Result> SP_LOGIN(string iD, string pWD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var pWDParameter = pWD != null ?
                new ObjectParameter("PWD", pWD) :
                new ObjectParameter("PWD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LOGIN_Result>("SP_LOGIN", iDParameter, pWDParameter);
        }
    
        public virtual int UPDATE_PRODUCT(string iD_PRODUCT, string lABEL_PRODUCT, Nullable<int> qTE_IN_STOCK, string pRICE, byte[] iMAGE, Nullable<int> iD_CAT)
        {
            var iD_PRODUCTParameter = iD_PRODUCT != null ?
                new ObjectParameter("ID_PRODUCT", iD_PRODUCT) :
                new ObjectParameter("ID_PRODUCT", typeof(string));
    
            var lABEL_PRODUCTParameter = lABEL_PRODUCT != null ?
                new ObjectParameter("LABEL_PRODUCT", lABEL_PRODUCT) :
                new ObjectParameter("LABEL_PRODUCT", typeof(string));
    
            var qTE_IN_STOCKParameter = qTE_IN_STOCK.HasValue ?
                new ObjectParameter("QTE_IN_STOCK", qTE_IN_STOCK) :
                new ObjectParameter("QTE_IN_STOCK", typeof(int));
    
            var pRICEParameter = pRICE != null ?
                new ObjectParameter("PRICE", pRICE) :
                new ObjectParameter("PRICE", typeof(string));
    
            var iMAGEParameter = iMAGE != null ?
                new ObjectParameter("IMAGE", iMAGE) :
                new ObjectParameter("IMAGE", typeof(byte[]));
    
            var iD_CATParameter = iD_CAT.HasValue ?
                new ObjectParameter("ID_CAT", iD_CAT) :
                new ObjectParameter("ID_CAT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_PRODUCT", iD_PRODUCTParameter, lABEL_PRODUCTParameter, qTE_IN_STOCKParameter, pRICEParameter, iMAGEParameter, iD_CATParameter);
        }
    }
}
